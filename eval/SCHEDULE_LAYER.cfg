### SCHEDULE_LAYER ###
# Version 0.9 2022-12-7
# 
# This macro allows you to schedule a command to run when the print reaches a specified layer.
# 
# It can be used to schedule pauses, filament changes, temperature or speed changes, or even
# custom macros! Any gcode/native/macro command should work. Jinja scripting is not supported.
# Any command that can be added directly to the gcode file or slicer's custom gcode will work here.
# 
# 
# WARNING: There is no error checking for commands!!!
# It's possible to misuse this macro to cause prints to fail, so please use caution!
# If you are unsure, just schedule a PAUSE and run your commands manually
# 
# 
# Prerequisites:
# 
# You must include the following line in your slicer's "Before Layer Change Custom Gcode"
# 
# _LAYER_MACRO
# 
# That's it! Just one simple command. This tells Klipper to call that macro at the start of
# every layer so the macro can check if there are any scheduled commands and execute them if 
# necessary.
# 
# 
# Then we can schedule commands at any time before or during a print by running SCHEDULE_LAYER.
# 
# The format is as follows:
# 
# SCHEDULE_LAYER LAYER=<layer_number> COMMAND=<command>


[gcode_macro SCHEDULE_LAYER]
description: Schedule a command to run when a specified layer is reached
gcode:
    {% set trigger_layer = params.LAYER|default(0)|int %}
    {% set trigger_command = params.COMMAND|default("M117")|string %}
    {% if trigger_layer > printer.print_stats.info.current_layer and trigger_layer <= printer.print_stats.info.total_layer %}
        SET_GCODE_VARIABLE MACRO=_LAYER_MACRO VARIABLE=trigger_layer VALUE={trigger_layer}
        SET_GCODE_VARIABLE MACRO=_LAYER_MACRO VARIABLE=trigger_command VALUE={trigger_command}
        RESPOND TYPE=info MSG="Succesfully scheduled command for Layer {trigger_layer}."
    {% elif  trigger_layer > printer.print_stats.info.total_layer %}
        RESPOND TYPE=error MSG="ERROR creating schedule."
        RESPOND TYPE=error MSG="Layer {trigger_layer} does not exist."
        RESPOND TYPE=error MSG="There are only {printer.print_stats.info.total_layer} layers."
    {% elif  trigger_layer > printer.print_stats.info.total_layer %}
        RESPOND TYPE=error MSG="ERROR creating schedule."
        RESPOND TYPE=error MSG="Layer {trigger_layer} is in the past."
        RESPOND TYPE=error MSG="The current layer is {printer.print_stats.info.current_layer}."
    {% elif trigger_layer <= 0 %}
        RESPOND TYPE=error MSG="ERROR creating schedule."
        RESPOND TYPE=error MSG="Layer {trigger_layer} does not exist."
        RESPOND TYPE=info MSG="Please use SCHEDULE_CANCEL to cancel layer schedules."
    {% else %}
        RESPOND TYPE=error MSG="ERROR creating schedule."
        RESPOND TYPE=error MSG="UNKNOWN ERROR, contact developer."
    {% endif %}

[gcode_macro SCHEDULE_CANCEL]
description: Cancel any scheduled layer command
gcode:
    SET_GCODE_VARIABLE MACRO=_LAYER_MACRO VARIABLE=trigger_layer VALUE=0
    SET_GCODE_VARIABLE MACRO=_LAYER_MACRO VARIABLE=trigger_command VALUE="M117"
    RESPOND TYPE=info MSG="Succesfully canceled scheduled layer command."

[gcode_macro _LAYER_MACRO]
variable_trigger_layer: 0
variable_trigger_command: "M117"
gcode:
    {% set t_layer = printer["gcode_macro _LAYER_MACRO"].trigger_layer|default(0)|int %}
    {% set commnd = printer["gcode_macro _LAYER_MACRO"].trigger_command|default("M117")|string %}
    {% if t_layer > 0 %} ;Don't trigger at layer 0
        {% if printer.print_stats.info.current_layer == t_layer %} ;Are we at the trigger layer?
            RESPOND MSG="Layer {t_layer}: Event Triggered."
            {commnd} ;Run Layer Command
        {% endif %}
    {% endif %}
